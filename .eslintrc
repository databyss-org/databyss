{
  "extends": ["eslint-config-airbnb", "eslint-config-prettier"],
  "plugins": [
    "eslint-plugin-prettier",
    "@typescript-eslint",
    "react-hooks", 
    "cypress"
  ],
  "parser": "@typescript-eslint/parser",
  "env": {
    "jest": true,
    "browser": true,
    "cypress/globals": true
  },
  "settings": {
    "import/resolver": {
      "node": {
        "extensions": [".js", ".jsx", ".ts", ".tsx"]
      }
    }
  },
  "rules": {
    "no-return-assign": ["error", "except-parens"], // Default option
    "no-console": "off", // Console logs are too useful and are removed in prod anyway
    "global-require": "off", // Useful for images, assets, etc
    "import/no-dynamic-require": "off", // Useful for images, assets, etc
    "import/prefer-default-export": "off", // Often this is not organizationally optimal
    "no-shadow": "off", // Shadowing is a nice language feature. Naming is hard.
    "no-underscore-dangle": "off", // It's classic pattern to denote private props.
    "react/prop-types": "off", // We're using Typescript instead
    "react/require-default-props": "off", // Not useful without prop-types
    "react/jsx-filename-extension": "off", // We're using .js for jsx files
    "react/no-children-prop": "off", // Certain libs (like router) use this pattern
    "react/no-array-index-key": "off", // It's up to the coder to ensure keys stay unique to value
    "react/no-multi-comp": "off", // It's often useful to group small, tightly related components
    "prefer-destructuring": "off", // This forces awkward syntax sometimes
    "no-case-declarations": "off", // Fallthrough is useful in case/default clauses
    "no-param-reassign": ["error", { "props": false }], // Useful for mutating reduce accumulators, ex.
    "react-hooks/rules-of-hooks": "error",
    "jsx-a11y/anchor-is-valid": "off",
    "no-unused-vars": "off", // use Typescript check instead
    "@typescript-eslint/no-unused-vars": [
      "error", 
      {
        "vars": "all",
        "args": "after-used",
        "ignoreRestSiblings": false 
    }],
    "prettier/prettier": [
      "error",
      {
        "printWidth": 80, // Easy to read
        "semi": false, // Almost always unecessary
        "singleQuote": true, // Easy to read
        "trailingComma": "es5" // Helps simplify diffs
      }
    ],
    "import/extensions": [
      "error",
      "ignorePackages",
      {
        "js": "never",
        "mjs": "never",
        "jsx": "never",
        "ts": "never",
        "tsx": "never"
      }
    ]
  }
}
