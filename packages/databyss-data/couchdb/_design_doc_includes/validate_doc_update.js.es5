function(newDoc) {
  if (newDoc['_deleted']) return;


  var tv4 = require('libs/tv4');
  tv4.addSchema('text', this.textSchema)
  tv4.addSchema('pouchDb', this.pouchDocSchema)
  tv4.addSchema('blockSchema', this.blockSchema)
  
  // admin databases have specific schemas passed as this.schema

  var schema = this.schema
  if (!schema) {
    // user database determines the schema by the .type field
    var schemaMap = {
      SOURCE: this.sourceSchema,
      ENTRY: this.entrySchema,
      TOPIC: this.topicSchema,
      PAGE: this.pageSchema,
      SELECTION: this.selectionSchema,
      BLOCK_RELATION: this.blockRelationSchema,
      USER_PREFERENCES: this.userPreferenceSchema
    }
    if(newDoc.$type == 'BLOCK'){
      schema = schemaMap[newDoc.type]
    } else {
      schema = schemaMap[newDoc.$type]
    }
  }
  // `this.schema &&` this will be removed when all schemas are implemented
  if (schema && !tv4.validate(newDoc, schema, false, true)) {
    throw({forbidden: tv4.error.message + ' -> ' + tv4.error.dataPath + '/ / ' + JSON.stringify(newDoc)});
  }

  if(!schema){
    throw({forbidden: 'no schema found'});
  }
}